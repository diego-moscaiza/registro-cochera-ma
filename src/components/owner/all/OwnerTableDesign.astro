---
interface Props {
	listaPropietarios: {
		idDueno: string;
		nombreDueno: string;
		guardaCarreta: boolean;
		montoDiario: number;
		montoTarifaAgua: number;
	}[];
}

const { listaPropietarios } = Astro.props;
---

<div class="flex flex-col">
	<div class="overflow-x-auto">
		<div class="inline-block min-w-full align-middle">
			<div class="overflow-hidden shadow-md rounded-2xl">
				<table
					class:list={[
						"min-w-full overflow-x-auto",
						"divide-y rounded-lg",
						"bg-white dark:bg-slate-800",
						"divide-gray-300 dark:divide-slate-700",
					]}
				>
					<thead
						class="bg-slate-200 dark:bg-slate-700 rounded-t-lg text-nowrap"
					>
						<tr>
							<th scope="col" class="p-4">
								<div class="flex items-center">
									<input
										id="checkbox-all"
										aria-describedby="checkbox-1"
										type="checkbox"
										class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-2 focus:ring-primary-400 dark:focus:ring-primary-600 dark:ring-offset-gray-900 dark:bg-gray-800 dark:border-gray-600"
									/>
									<label for="checkbox-all" class="sr-only">checkbox</label>
								</div>
							</th>
							<th
								scope="col"
								class="p-4 text-sm font-semibold text-left text-gray-700 uppercase dark:text-gray-300"
							>
								Nombre
							</th>
							<th
								scope="col"
								class="p-4 text-sm font-semibold text-left text-gray-700 uppercase dark:text-gray-300"
							>
								Monto diario
							</th>
							<th
								scope="col"
								class="p-4 text-sm font-semibold text-left text-gray-700 uppercase dark:text-gray-300"
							>
								Estado
							</th>
							<th
								scope="col"
								class="p-4 text-sm font-semibold text-left text-gray-700 uppercase dark:text-gray-300"
							>
								Acciones
							</th>
						</tr>
					</thead>

					<tbody class="divide-y divide-gray-200 dark:divide-gray-700">
						{
							listaPropietarios.map((propietario: any) => {
								const formatoPropietario = {
									idDueno: propietario.idDueno ?? "-",
									nombreDueno: propietario.nombreDueno ?? "-",
									montoDiario: propietario.montoDiario ?? "-",
									guardaCarreta: propietario.guardaCarreta
										? "Sí guarda"
										: "Ya no guarda",
								};

								return (
									<tr class="hover:bg-gray-100 dark:hover:bg-gray-700 transition duration-200">
										<td class="w-4 p-4">
											<div class="flex items-center">
												<input
													id={`checkbox-${formatoPropietario.idDueno}`}
													aria-describedby="checkbox-1"
													type="checkbox"
													class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-2 focus:ring-primary-400 dark:focus:ring-primary-600 dark:ring-offset-gray-900 dark:bg-gray-800 dark:border-gray-600"
												/>
												<label
													for={`checkbox-${formatoPropietario.idDueno}`}
													class="sr-only"
												>
													checkbox
												</label>
											</div>
										</td>
										<td class="flex items-center p-4 mr-12 space-x-6 whitespace-nowrap">
											<div class="flex items-center justify-center w-10 h-10 rounded-full bg-gray-500">
												<span class="text-sm font-medium text-white">
													{formatoPropietario.nombreDueno
														.charAt(0)
														.toUpperCase()}
												</span>
											</div>
											<div class="text-base font-medium text-gray-900 dark:text-gray-200">
												{formatoPropietario.nombreDueno}
											</div>
										</td>
										<td class="p-4 text-base font-semibold text-gray-900 whitespace-nowrap dark:text-gray-200">
											S/. {formatoPropietario.montoDiario.toFixed(2)}
										</td>
										<td class="p-4 text-base font-semibold text-gray-900 dark:text-gray-200">
											<div class="flex items-center">
												{propietario.guardaCarreta ? (
													<div class="h-2.5 w-2.5 rounded-full bg-green-500 mr-2" />
												) : (
													<div class="h-2.5 w-2.5 rounded-full bg-red-500 mr-2" />
												)}
												{formatoPropietario.guardaCarreta}
											</div>
										</td>
										<td class="p-4 space-x-2 whitespace-nowrap">
											<button
												type="button"
												data-modal-toggle="edit-user-modal"
												onclick={`sessionStorage.setItem('editData', JSON.stringify({
													            id: '${formatoPropietario.idDueno}',
													            nombre: '${formatoPropietario.nombreDueno}',
													            montoDiario: '${formatoPropietario.montoDiario}',
													            guardaCarreta: '${formatoPropietario.guardaCarreta}'
													        }));`}
												class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-blue-600 hover:bg-blue-700 focus:ring-2 focus:ring-blue-400 dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-700"
											>
												<svg
													class="w-4 h-4 mr-2"
													fill="currentColor"
													viewBox="0 0 20 20"
													xmlns="http://www.w3.org/2000/svg"
												>
													<path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z" />
													<path
														fill-rule="evenodd"
														d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"
														clip-rule="evenodd"
													/>
												</svg>
												Editar
											</button>
											{/* <button
												type="button"
												data-modal-toggle="delete-user-modal"
												class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-red-600 rounded-lg hover:bg-red-700 focus:ring-2 focus:ring-red-400 dark:focus:ring-red-700"
											>
												<svg
													class="w-4 h-4 mr-2"
													fill="currentColor"
													viewBox="0 0 20 20"
													xmlns="http://www.w3.org/2000/svg"
												>
													<path
														fill-rule="evenodd"
														d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
														clip-rule="evenodd"
													/>
												</svg>
												Eliminar
											</button> */}
										</td>
									</tr>
								);
							})
						}
					</tbody>
				</table>
			</div>
			<!-- Edit User Modal -->
			<div
				class="fixed inset-0 z-50 items-center justify-center bg-black bg-opacity-50 transition-opacity duration-300 ease-in-out hidden"
				id="edit-user-modal"
			>
				<div
					class="relative w-full max-w-2xl px-4 transform transition-all duration-300 ease-in-out scale-95 opacity-0"
				>
					<!-- Modal content -->
					<div class="relative bg-white rounded-lg shadow-lg dark:bg-gray-800">
						<!-- Modal header -->
						<div
							class="flex items-start justify-between p-5 border-b border-gray-200 rounded-t dark:border-gray-700"
						>
							<h3 class="text-xl font-semibold text-gray-900 dark:text-white">
								Editar información del propietario
							</h3>
							<button
								type="button"
								id="close-edit-owner-modal"
								class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-700 dark:hover:text-white"
								data-modal-toggle="edit-user-modal"
							>
								<svg
									class="w-5 h-5"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
										clip-rule="evenodd"></path>
								</svg>
							</button>
						</div>

						<!-- Modal body -->
						<div class="p-6 space-y-6">
							<form action="#">
								<div class="grid grid-cols-6 gap-6">
									<div class="col-span-6 sm:col-span-6">
										<label
											for="edit-full-name"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Nombre</label
										>
										<input
											type="text"
											name="nombre-Dueno"
											id="edit-full-name"
											class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
											placeholder="Nombre del propietario"
											required
										/>
									</div>
									<div class="col-span-6 sm:col-span-3">
										<label
											for="edit-monto-diario"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Monto diario</label
										>
										<input
											type="numeric"
											name="monto-diario"
											id="edit-monto-diario"
											class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500"
											placeholder="Monto diario de pago"
											required
										/>
									</div>
									<div class="col-span-6 sm:col-span-3">
										<label
											for="edit-estado"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Estado</label
										>
										<select
											name="estado"
											id="edit-estado"
											class="shadow-sm bg-gray-50 rounded-lg border border-gray-300 text-gray-900 sm:text-sm focus:ring-gray-500 focus:border-gray-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-gray-500 dark:focus:border-gray-500 appearance-none"
											required
										>
											<option value="Sí guarda">Sí guarda</option>
											<option value="Ya no guarda">Ya no guarda</option>
										</select>
									</div>
								</div>
							</form>
						</div>

						<!-- Modal footer -->
						<div
							class="flex items-center justify-end p-6 border-t border-gray-200 rounded-b dark:border-gray-700"
						>
							<button
								class="text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-800"
								type="submit"
							>
								Guardar
							</button>
						</div>
					</div>
				</div>
			</div>

			<!-- Add User Modal -->
			<div
				class="fixed inset-0 z-50 items-center justify-center bg-black bg-opacity-50 transition-opacity duration-300 ease-in-out hidden"
				id="add-user-modal"
			>
				<div
					class="relative w-full max-w-2xl px-4 transform transition-all duration-300 ease-in-out scale-95 opacity-0"
				>
					<!-- Modal content -->
					<div class="relative bg-white rounded-lg shadow-lg dark:bg-gray-800">
						<!-- Modal header -->
						<div
							class="flex items-start justify-between p-5 border-b border-gray-200 rounded-t dark:border-gray-700"
						>
							<h3 class="text-xl font-semibold text-gray-900 dark:text-white">
								Add new user
							</h3>
							<button
								type="button"
								class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-700 dark:hover:text-white"
								data-modal-toggle="add-user-modal"
							>
								<svg
									class="w-5 h-5"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
										clip-rule="evenodd"></path>
								</svg>
							</button>
						</div>

						<!-- Modal body -->
						<div class="p-6 space-y-6">
							<form action="#">
								<div class="grid grid-cols-6 gap-6">
									<div class="col-span-6 sm:col-span-3">
										<label
											for="add-first-name"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>First Name</label
										>
										<input
											type="text"
											name="first-name"
											id="add-first-name"
											class="shadow-sm bg-blue-50 border border-blue-300 text-blue-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-blue-700 dark:border-blue-600 dark:placeholder-blue-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
											placeholder="Bonnie"
											required
										/>
									</div>
									<div class="col-span-6 sm:col-span-3">
										<label
											for="add-last-name"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Last Name</label
										>
										<input
											type="text"
											name="last-name"
											id="add-last-name"
											class="shadow-sm bg-blue-50 border border-blue-300 text-blue-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-blue-700 dark:border-blue-600 dark:placeholder-blue-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
											placeholder="Green"
											required
										/>
									</div>
									<div class="col-span-6 sm:col-span-3">
										<label
											for="add-email"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Email</label
										>
										<input
											type="email"
											name="email"
											id="add-email"
											class="shadow-sm bg-blue-50 border border-blue-300 text-blue-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-blue-700 dark:border-blue-600 dark:placeholder-blue-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
											placeholder="example@company.com"
											required
										/>
									</div>
									<div class="col-span-6 sm:col-span-3">
										<label
											for="add-position"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Position</label
										>
										<input
											type="text"
											name="position"
											id="add-position"
											class="shadow-sm bg-blue-50 border border-blue-300 text-blue-900 sm:text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-blue-700 dark:border-blue-600 dark:placeholder-blue-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
											placeholder="e.g. React developer"
											required
										/>
									</div>
									<div class="col-span-6">
										<label
											for="add-biography"
											class="block mb-2 text-sm font-medium text-blue-900 dark:text-white"
											>Biography</label
										>
										<textarea
											id="add-biography"
											rows="4"
											class="block p-2.5 w-full text-sm text-blue-900 bg-blue-50 rounded-lg border border-blue-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-blue-700 dark:border-blue-600 dark:placeholder-blue-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
											placeholder="👨‍💻Full-stack web developer. Open-source contributor."
										></textarea>
									</div>
								</div>
							</form>
						</div>

						<!-- Modal footer -->
						<div
							class="flex items-center justify-end p-6 border-t border-gray-200 rounded-b dark:border-gray-700"
						>
							<button
								class="text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-500 dark:hover:bg-blue-600 dark:focus:ring-blue-800"
								type="submit"
							>
								Add user
							</button>
						</div>
					</div>
				</div>
			</div>

			<!-- Delete User Modal -->
			<div
				class="fixed inset-0 z-50 items-center justify-center bg-black bg-opacity-50 transition-opacity duration-300 ease-in-out hidden"
				id="delete-user-modal"
			>
				<div
					class="relative w-full max-w-md px-4 transform transition-all duration-300 ease-in-out scale-95 opacity-0"
				>
					<!-- Modal content -->
					<div class="relative bg-white rounded-lg shadow-lg dark:bg-gray-800">
						<!-- Modal header -->
						<div class="flex justify-end p-2">
							<button
								type="button"
								class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-700 dark:hover:text-white"
								data-modal-toggle="delete-user-modal"
							>
								<svg
									class="w-5 h-5"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
								>
									<path
										fill-rule="evenodd"
										d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
										clip-rule="evenodd"></path>
								</svg>
							</button>
						</div>
						<!-- Modal body -->
						<div class="p-6 text-center">
							<svg
								class="w-16 h-16 mx-auto text-red-600"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
							</svg>
							<h3
								class="mt-5 mb-6 text-lg font-normal text-gray-500 dark:text-gray-400"
							>
								Are you sure you want to delete this user?
							</h3>
							<a
								href="#"
								class="text-white bg-red-600 hover:bg-red-700 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:focus:ring-red-800"
							>
								Yes, I'm sure
							</a>
							<button
								type="button"
								class="text-gray-900 bg-white border border-gray-200 hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-gray-700"
								data-modal-toggle="delete-user-modal"
							>
								No, cancel
							</button>
						</div>
					</div>
				</div>
			</div>

			<!-- barra de paginación de usuarios -->
			<!-- <NavPagination /> -->

			<!-- Script para habilitar los modales con animación -->
			<script>
				// Función para abrir un modal
				function abrirModal(modalId: any) {
					const modal = document.getElementById(modalId);
					if (modal) {
						const modalContent = modal.querySelector(".transform");
						if (modal.classList.contains("hidden")) {
							modal.classList.remove("hidden");
							modal.classList.add("flex");
							setTimeout(() => {
								modal.classList.add("opacity-100");
								modalContent?.classList.add("scale-100", "opacity-100");
								modalContent?.classList.remove("scale-95", "opacity-0");
							}, 10);
						}
					}
				}

				// Función para cerrar un modal
				function cerrarModal(modalId: any) {
					const modal = document.getElementById(modalId);
					if (modal) {
						const modalContent = modal.querySelector(".transform");
						modal.classList.remove("opacity-100");
						modalContent?.classList.remove("scale-100", "opacity-100");
						modalContent?.classList.add("scale-95", "opacity-0");
						setTimeout(() => {
							modal.classList.remove("flex");
							modal.classList.add("hidden");
						}, 300);
					}
				}

				document
					.getElementById("edit-monto-diario")
					.addEventListener("input", (event) => {
						const input: any = event.target;
						const regex = /^\d{0,2}$/; // Permite solo números de hasta 2 cifras
						const previousValue =
							input.getAttribute("data-previous-value") || ""; // Obtiene el valor anterior

						if (!regex.test(input.value)) {
							input.value = previousValue; // Restaura el valor anterior si no es válido
						} else {
							input.setAttribute("data-previous-value", input.value); // Guarda el valor actual como válido
						}
					});

				//
				document.addEventListener("DOMContentLoaded", () => {
					// Función para establecer los parámetros en los inputs del modal
					function setParams() {
						const editData = sessionStorage.getItem("editData");
						if (editData) {
							const { id, nombre, montoDiario, guardaCarreta } =
								JSON.parse(editData);

							// Asignar valores a los inputs
							const inputNombre: any =
								document.getElementById("edit-full-name");
							const inputMonto: any =
								document.getElementById("edit-monto-diario");
							const inputEstado: any = document.getElementById("edit-estado");

							if (inputNombre) inputNombre.value = nombre;
							if (inputMonto) inputMonto.value = montoDiario;
							if (inputEstado) inputEstado.value = guardaCarreta;
						}
					}

					// Función para eliminar los parámetros del modal
					function deleteParams() {
						sessionStorage.removeItem("editData");
					}

					// Función para alternar el estado del modal
					function toggleModal() {
						const modalToggles = document.querySelectorAll(
							'[data-modal-toggle="edit-user-modal"]',
						);
						modalToggles.forEach((toggle) => {
							toggle.addEventListener("click", () => {
								const modalId = toggle.getAttribute("data-modal-toggle");
								if (modalId) {
									const modal = document.getElementById(modalId);
									if (modal && modal.classList.contains("hidden")) {
										setParams();
										abrirModal(modalId);
									} else {
										deleteParams();
										cerrarModal(modalId);
									}
								}
							});
						});
					}

					// Inicializar funciones
					setParams();
					toggleModal();
				});
			</script>
		</div>
	</div>
</div>
