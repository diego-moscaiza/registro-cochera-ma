---
import Navbar from "../components/Navbar.astro";
import Base from "../layout/Base.astro";

const loginTitle = "Iniciar sesión";
---

<Base title={loginTitle}>
	<Navbar />
	<main
		class="flex flex-col items-center justify-center px-8 xl:px-6 min-h-[75vh] xl:min-h-[85vh]"
	>
		<section
			class:list={[
				"bg-white dark:bg-slate-800",
				"w-full max-w-lg md:max-w-xl mx-auto p-8",
				"flex flex-col gap-6",
				"rounded shadow-md",
			]}
		>
			<h1
				class="w-full font-semibold text-2xl lg:text-3xl text-black dark:text-white"
			>
				Iniciar sesión
			</h1>

			<form
				id="loginForm"
				action="/api/auth/signin"
				method="post"
				class="grid grid-cols-1 gap-6 w-full"
			>
				<div id="emailContainer" class="grid grid-cols-1 gap-2">
					<label
						for="email"
						class="text-base lg:text-xl font-medium text-black dark:text-white"
						>Tu correo electrónico</label
					>
					<input
						id="email"
						type="email"
						name="email"
						placeholder="nombre@mail.com"
						autocomplete="on"
						required
						class:list={[
							"py-2 px-4 rounded-md border",
							"text-base lg:text-lg text-black dark:text-neutral-100",
							"bg-white dark:bg-slate-700 border-neutral-300 dark:border-slate-500",
							"focus:bg-neutral-50 dark:focus:bg-slate-800 focus:border-blue-500 focus:ring-blue-600",
							"focus:outline-none focus:ring-2 focus:ring-opacity-60",
						]}
					/>
					<div id="emailError" class="text-red-500 text-sm hidden">
						Por favor, introduce una dirección de correo válida.
					</div>
				</div>

				<div id="passwordContainer" class="grid grid-cols-1 gap-2">
					<label
						for="password"
						class="text-base lg:text-xl font-semibold text-black dark:text-white"
						>Tu contraseña</label
					>
					<div
						class:list={[
							"py-2 px-4 rounded-md border",
							"flex items-center justify-between",
							"gap-2",
							"text-base lg:text-lg text-black dark:text-neutral-100",
							"bg-white dark:bg-slate-700 border-neutral-300 dark:border-slate-500",
							"focus-within:border-blue-500 focus-within:ring-2 focus-within:ring-blue-600 focus-within:ring-opacity-60",
							"focus-within:bg-neutral-50 dark:focus-within:bg-slate-800",
						]}
					>
						<input
							id="password"
							type="password"
							name="password"
							placeholder="••••••••"
							required
							autocomplete="current-password"
							class:list={[
								"w-full outline-none",
								"text-base lg:text-lg text-black dark:text-neutral-100",
								"bg-transparent border-none",
							]}
						/>
						<button
							type="button"
							id="showPasswordButton"
							aria-label="Mostrar u ocultar contraseña"
							class:list={[
								"flex items-center justify-center",
								"w-8 h-8 rounded-md",
								"hover:bg-neutral-100 dark:hover:bg-slate-600",
								"focus:outline-none focus:ring-2 focus:ring-blue-500",
							]}
						>
							<span aria-hidden="true">👁️</span>
						</button>
					</div>
					<div id="passwordError" class="text-red-500 text-sm hidden">
						La contraseña es obligatoria.
					</div>
				</div>

				<div class="flex flex-col gap-4">
					<div class="flex items-center">
						<input
							type="checkbox"
							id="remember"
							name="remember"
							class="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600"
						/>
						<label
							for="remember"
							class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300"
						>
							Mantener sesión iniciada
						</label>
					</div>
				</div>

				<button
					id="loginButton"
					type="submit"
					class:list={[
						"py-2 text-md lg:text-xl font-medium text-neutral-100",
						"rounded-md bg-blue-700 border-blue-800 border",
						"focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:focus:ring-offset-neutral-900",
						"disabled:opacity-50 disabled:cursor-not-allowed",
						"relative",
					]}
				>
					<span>Ingresar</span>
					<span
						id="loadingSpinner"
						class="absolute inset-0 flex items-center justify-center hidden"
					>
						<svg
							class="animate-spin h-5 w-5 text-white"
							xmlns="http://www.w3.org/2000/svg"
							fill="none"
							viewBox="0 0 24 24"
						>
							<circle
								class="opacity-25"
								cx="12"
								cy="12"
								r="10"
								stroke="currentColor"
								stroke-width="4"></circle>
							<path
								class="opacity-75"
								fill="currentColor"
								d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
							></path>
						</svg>
					</span>
				</button>
			</form>
		</section>
	</main>
</Base>

<script>
	const passwordInput = document.getElementById("password") as HTMLInputElement;
	const showPasswordButton = document.getElementById(
		"showPasswordButton",
	) as HTMLButtonElement;
	const loginForm = document.getElementById("loginForm") as HTMLFormElement;
	const loginButton = document.getElementById(
		"loginButton",
	) as HTMLButtonElement;
	const loadingSpinner = document.getElementById(
		"loadingSpinner",
	) as HTMLSpanElement;
	const emailInput = document.getElementById("email") as HTMLInputElement;
	const emailError = document.getElementById("emailError") as HTMLDivElement;
	const passwordError = document.getElementById(
		"passwordError",
	) as HTMLDivElement;

	// Mostrar/ocultar contraseña
	showPasswordButton.addEventListener("click", () => {
		const isVisible = passwordInput.type === "text";
		passwordInput.type = isVisible ? "password" : "text";
		showPasswordButton.innerHTML = isVisible
			? '<span aria-hidden="true">👁️</span>'
			: '<span aria-hidden="true">🙈</span>';
	});

	// Validación y manejo de formulario
	loginForm.addEventListener("submit", (e) => {
		let isValid = true;

		// Validar email
		if (!emailInput.validity.valid) {
			emailError.classList.remove("hidden");
			isValid = false;
		} else {
			emailError.classList.add("hidden");
		}

		// Validar contraseña
		if (!passwordInput.validity.valid) {
			passwordError.classList.remove("hidden");
			isValid = false;
		} else {
			passwordError.classList.add("hidden");
		}

		if (!isValid) {
			e.preventDefault();
			return;
		}

		// Mostrar animación de carga
		loginButton.disabled = true;
		loginButton.querySelector("span:first-child")!.classList.add("invisible");
		loadingSpinner.classList.remove("hidden");
	});

	// Validar en tiempo real
	emailInput.addEventListener("input", () => {
		if (emailInput.validity.valid) {
			emailError.classList.add("hidden");
		}
	});

	passwordInput.addEventListener("input", () => {
		if (passwordInput.validity.valid) {
			passwordError.classList.add("hidden");
		}
	});
</script>
